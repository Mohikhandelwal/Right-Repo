# -*- coding: utf-8 -*-
"""Mohit

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1onl7XrcyKg2l4spRueda4GwTJPO6gCD3
"""







l1 = ["mohit","ankit"]

l2 = [ 172,177]

dict(zip(l1,l2))

for i,j in list(zip(["mohit","ankit"],[172,177])):

for i,j in  list(zip(["mohit","ankit"],[172,177])):
  print(i,j)

l = [i for i in range(0,10) if i % 2==0 ]

l

import random

s ="55"

int(s)

import random
import matplotlib.pyplot as plt

mapping_dict =dict(zip(range(0,10),range(0,10)))

mapping_dict

for k in mapping_dict.keys():
  mapping_dict[k] = str(mapping_dict[k])

mapping_dict

for i in range(0,26):
  mapping_dict[10+i] = chr(65+i)

mapping_dict



random_numbers = list()
for i in range(0,1000):
blank_str = str()


random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]

random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]


for i in range(0,8):
 coin_toss = random.randint(0,1)

 if coin_toss == 1:

   random_digit = random.randint(0,35)
   blank_str = mapping_dict[random_digit]

 else:
   break


   random_number.append(blank_str)

"""random_numbers = list()
for i in range(0,1000):
blank_str=str()

random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]

random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]


for i in range(0,8):
 coin_toss = random.randint(0,1)

 if coin_toss == 1:

   random_digit = random.randint(0,35)
   blank_str = mapping_dict[random_digit]

 else:
   break


   random_number.append(blank_str)
"""

'R'<'L'

for blank_str in random_number:
  highest_digit = max(blank_str)
  highest_base = reverse+mapping_dict[highest_digit] +1
  print("Highest Base of {}".format(blank_str,highest_base))

mapping_dict[10] = chr(65)



reverse_mapping_dict = dict()
for k in mapping_dict.keys():
  reverse_mapping_dict[[k]] = k



random_numbers = list()
for i in range(0,1000):
blank_str = str()


random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]

random_digit = random.randint(0,35)
blank_str = blank_str + mapping_dict[random_digit]


for i in range(0,8):
 coin_toss = random.randint(0,1)

 if coin_toss == 1:

   random_digit = random.randint(0,35)
   blank_str = mapping_dict[random_digit]

 else:
   break


   random_number.append(blank_str)

import random
import matplotlib.pyplot as plt

mapping_dict = dict(zip(range(0,10),range(0,10)))

mapping_dict



for k in mapping_dict.keys():

  mapping_dict[k] = str(mapping_dict[k])

mapping_dict

for i in range(0,26):
  mapping_dict[10+i] = chr(65+i)

mapping_dict

"""machine learning is a set of mathematical and programming toool used to define a function for the graph of population data using sample data."""

sample_size = 5000000

random_numbers = list()

for i in range(0,sample_size):

  blank_str = str()

  random_digit = random.randint(0,35)
  blank_str = blank_str + mapping_dict[random_digit]

  random_digit = random.randint(0,35)
  blank_str = blank_str + mapping_dict[random_digit]

  for i in range(0,8):
    coin_toss = random.randint(0,1)

    if coin_toss == 1:

      random_digit = random.randint(0,35)
      blank_str = blank_str + mapping_dict[random_digit]

    else:
      break

  random_numbers.append(blank_str)

reverse_mapping_dict = dict()

for k in mapping_dict.keys():
  reverse_mapping_dict[mapping_dict[k]] = k

base_frequency = dict()

for blank_str in random_numbers:
  highest_digit = max(blank_str)
  highest_base = reverse_mapping_dict[highest_digit] + 1

  if highest_base in base_frequency.keys():
    base_frequency[highest_base] += (1/sample_size)
  else:
    base_frequency[highest_base] = (1/sample_size)

plt.bar(x=base_frequency.keys(),height=base_frequency.values())